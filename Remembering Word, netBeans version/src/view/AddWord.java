/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Security.ExceptionWordNotFound;
import controller.Addition;
import controller.ReadFileWord;
import controller.ReadFileWordValue;
import java.awt.Color;
import java.awt.Point;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextField;
import model.MainEntity;
import model.Word;
import model.WordValue;

/**
 *
 * @author Илья
 */
public class AddWord extends javax.swing.JFrame {

    /**
     * Creates new form AddWord
     */
    private ArrayList<String> translates;
    //private String wordValue;
    private final int interval = 32;
    private ArrayList<JTextField> textFields;

    public AddWord() {
        initComponents();
        translates = new ArrayList<>();
        textFields = new ArrayList<>();
        textFields.add(variantTr);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        word = new javax.swing.JTextField();
        variantTr = new javax.swing.JTextField();
        plus = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        ok = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Слово");

        jLabel2.setText("Варианты перевода");

        word.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                wordFocusGained(evt);
            }
        });

        variantTr.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                variantTrFocusGained(evt);
            }
        });

        plus.setText("+");
        plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusActionPerformed(evt);
            }
        });

        cancel.setText("Отмена");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        ok.setText("OK");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(56, 56, 56))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(word, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(variantTr, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(248, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ok, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancel)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(plus, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(word, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(variantTr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(plus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 172, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel)
                    .addComponent(ok))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void plusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusActionPerformed
        // TODO add your handling code here:
        Point point;

        if (!"".equals(textFields.get(textFields.size() - 1).getText())) {
            point = plus.getLocation();
            point.x = variantTr.getX();

            setNewPositionPlus();

            JTextField newTr = new JTextField();//создать текстовое поле   
            newTr.addFocusListener(new FocusListener() {
                @Override
                public void focusGained(FocusEvent e) {
                    //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                    if (newTr.getForeground() == Color.red) {
                        newTr.setText("");
                        newTr.setForeground(Color.BLACK);
                    }
                }

                @Override
                public void focusLost(FocusEvent e) {
                    //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }
            });
            textFields.add(newTr);
            newTr.setLocation(point);//добавить его на позицию point
            newTr.setSize(variantTr.getSize());
            this.add(newTr);
            newTr.setVisible(true);//сделать видимым
        } else {
            textFields.get(textFields.size() - 1).setForeground(Color.red);
            textFields.get(textFields.size() - 1).setText("Заполните это поле");
        }

    }//GEN-LAST:event_plusActionPerformed

    private void setNewPositionPlus() {//изменение позиции кнопки плюс
        Point positionPlus = plus.getLocation();
        /*Point positionTr = variantTr.getLocation();
        int h = (int) (positionPlus.getY() - positionTr.getY());*/
        positionPlus.y += interval;
        plus.setLocation(positionPlus);
    }

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
        // TODO add your handling code here:
        //считать значения всех непустых полей в список
        if (!"".equals(word.getText())) {
            for (JTextField field : textFields) {
                if (!"".equals(field.getText())) {
                    translates.add(field.getText());
                }
            }

            try {
                //проверить, есть ли такое слово в словаре
                //ReadFileWord rfw = new ReadFileWord();
                //Word w = rfw.checkWord(word.getText());
                //if ("wnf".equals(w.getWord())) {//если нет - 
                    //записать значения в файл
                    Addition additionW = new Addition("Word");
                    Addition additionT = new Addition("Translates");
                    MainEntity me = new MainEntity(word.getText(), translates);
                    additionW.addWordInFile(me.getWord());
                    additionT.addValuesInFile(me.getListValues());

                    //translates.clear();//очистить список значений, чтоб не проверялся по второму кругу
                //} else {//если есть - проверить соответствующие ему переводы
                //    ReadFileWordValue rfwv = new ReadFileWordValue();
                //    ArrayList<WordValue> allV = rfwv.readAllValues(w.getId());

                //    for (String tr : translates) {
                //        for (WordValue wv : allV) {
                //            if (tr == null ? wv.getValue() == null : tr.equals(wv.getValue())) {
                //                translates.remove(tr);
                //            }
                //        }
                //    }
                    //если не все переводы есть - 
                //    if (!translates.isEmpty()) {
                        //дописать недостающие
                //        Addition additionT = new Addition("Translates");
                //        int startIndex = w.getNumValues();
                //        allV.clear();
                        
                //        for(String tr : translates){
                //            allV.add(new WordValue(tr, w.getId(),startIndex));
                //            startIndex++;
                //        }
                //    }
                //}

                onMainWindow();    //перейти в главное окно

            } catch (IOException /*| ClassNotFoundException | ExceptionWordNotFound*/ ex) {
                Logger.getLogger(AddWord.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            word.setForeground(Color.red);
            word.setText("Это поле должно быть заполнено");
        }
    }//GEN-LAST:event_okActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        //перейти в главное окно
        onMainWindow();
    }//GEN-LAST:event_cancelActionPerformed

    private void variantTrFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_variantTrFocusGained
        // TODO add your handling code here:
        if (variantTr.getForeground() == Color.red) {
            variantTr.setText("");
            variantTr.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_variantTrFocusGained

    private void wordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_wordFocusGained
        // TODO add your handling code here:
        if (word.getForeground() == Color.red) {
            word.setText("");
            word.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_wordFocusGained

    private void onMainWindow() {
        this.setVisible(false);
        new MainWindow().setVisible(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddWord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton ok;
    private javax.swing.JButton plus;
    private javax.swing.JTextField variantTr;
    private javax.swing.JTextField word;
    // End of variables declaration//GEN-END:variables
}
